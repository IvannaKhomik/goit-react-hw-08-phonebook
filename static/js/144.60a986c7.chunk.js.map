{"version":3,"file":"static/js/144.60a986c7.chunk.js","mappings":"gQAEaA,EAAOC,EAAAA,QAAAA,KAAH,gLASJC,EAAYD,EAAAA,QAAAA,MAAH,wFAKTE,EAAaF,EAAAA,QAAAA,MAAH,8aA0BVG,EAAYH,EAAAA,QAAAA,OAAH,kV,SCpCTI,EAAe,WAC1B,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,GAAcC,EAAAA,EAAAA,SACdC,GAAeD,EAAAA,EAAAA,SACfE,GAAkBF,EAAAA,EAAAA,SAElBG,EAAc,SAAAC,GAClB,MAAwBA,EAAEC,cAAlBd,EAAR,EAAQA,KAAMe,EAAd,EAAcA,MACd,OAAQf,GACN,IAAK,OACHC,EAAQc,GACR,MACF,IAAK,QACHZ,EAASY,GACT,MACF,IAAK,WACHV,EAAYU,GACZ,MACF,QACE,OAEL,EAcKC,EAAQ,WACZf,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,+BACE,UAACZ,EAAD,CAAMwB,SApBW,SAAAJ,GACnBA,EAAEK,iBACF,IAAMC,EAAO,CACXnB,KAAAA,EACAE,MAAAA,EACAE,SAAAA,GAEFE,GAASc,EAAAA,EAAAA,IAASD,IAClBE,QAAQC,IAAIH,GACZH,GACD,EAUG,WACE,SAACrB,EAAD,CAAW4B,QAASf,EAApB,mBACA,SAACZ,EAAD,CACE4B,KAAK,OACLxB,KAAK,OACLe,MAAOf,EACPyB,GAAIjB,EACJkB,SAAUd,EACVe,UAAQ,KAEV,SAAChC,EAAD,CAAW4B,QAASb,EAApB,oBACA,SAACd,EAAD,CACE4B,KAAK,QACLxB,KAAK,QACLe,MAAOb,EACPuB,GAAIf,EACJgB,SAAUd,EACVe,UAAQ,KAEV,SAAChC,EAAD,CAAW4B,QAASZ,EAApB,uBACA,SAACf,EAAD,CACE4B,KAAK,WACLxB,KAAK,WACLe,MAAOX,EACPqB,GAAId,EACJe,SAAUd,EACVe,UAAQ,KAGV,SAAC9B,EAAD,CAAW2B,KAAK,SAAhB,0BAIP,ECjFD,EAJqB,WACnB,OAAO,SAAC1B,EAAD,GACR,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Form = styled.form`\n  margin: 0 auto;\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  width: 400px;\n  border: 1px solid #343434;\n  border-radius: 8px;\n`;\nexport const FormLabel = styled.label`\n  margin-bottom: 12px;\n  font-weight: 500;\n  color: #343434;\n`;\nexport const InputField = styled.input`\n  width: 200px;\n  padding: 12px;\n  outline: 0;\n  margin-bottom: 24px;\n  border: 1px solid #343434;\n  border-radius: 4px;\n  transition: border-color 250ms ease-out;\n  &:first-of-type {\n    margin-bottom: 16px;\n  }\n  &:hover {\n    border-color: #e6b31e;\n  }\n\n  &:focus,\n  &:active {\n    border: none;\n    box-shadow: 2px 2px 8px #0b5345;\n  }\n\n  &:placeholder {\n    font-size: 8px;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  width: 150px;\n  color: #343434;\n  margin-bottom: 16px;\n  border-color: #343434;\n  background-color: #ffffff;\n  transition: border-color 250ms ease-out, background-color 250ms ease-out,\n    color 250ms ease-out;\n  &:hover,\n  &:focus {\n    background-color: #e6b31e;\n    border-color: transparent;\n  }\n`;\n","import { useId } from 'react';\nimport { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/operations';\nimport { Form, FormLabel, InputField, SubmitBtn } from './RegisterForm.styled';\n\nexport const RegisterForm = () => {\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const nameInputId = useId();\n  const emailInputId = useId();\n  const passwordInputId = useId();\n\n  const changeInput = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'email':\n        setEmail(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const user = {\n      name,\n      email,\n      password,\n    };\n    dispatch(register(user));\n    console.log(user);\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <FormLabel htmlFor={nameInputId}>Name</FormLabel>\n        <InputField\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          id={nameInputId}\n          onChange={changeInput}\n          required\n        />\n        <FormLabel htmlFor={emailInputId}>Email</FormLabel>\n        <InputField\n          type=\"email\"\n          name=\"email\"\n          value={email}\n          id={emailInputId}\n          onChange={changeInput}\n          required\n        />\n        <FormLabel htmlFor={passwordInputId}>Password</FormLabel>\n        <InputField\n          type=\"password\"\n          name=\"password\"\n          value={password}\n          id={passwordInputId}\n          onChange={changeInput}\n          required\n        />\n\n        <SubmitBtn type=\"submit\">Register</SubmitBtn>\n      </Form>\n    </>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm';\n\nconst RegisterPage = () => {\n  return <RegisterForm />;\n};\n\nexport default RegisterPage;\n"],"names":["Form","styled","FormLabel","InputField","SubmitBtn","RegisterForm","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","nameInputId","useId","emailInputId","passwordInputId","changeInput","e","currentTarget","value","reset","onSubmit","preventDefault","user","register","console","log","htmlFor","type","id","onChange","required"],"sourceRoot":""}