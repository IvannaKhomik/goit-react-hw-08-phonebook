{"version":3,"file":"static/js/322.a4ac0a3e.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactItem/ContactItem.styled.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.jsx","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","components/NotFound/NotFound.styled.js","components/NotFound/NotFound.jsx","components/Contacts/Contacts.jsx","components/Container/Container.styled.js","components/Container/Container.jsx","pages/ContactsPage/ContactsPage.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectLoadingStatus = state => state.contacts.isLoading;\nexport const selectErrorMessage = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.value;\n\nexport const selectFilteredList = createSelector(\n  [selectContacts, selectFilter],\n  (contactList, filterValue) => {\n    const normalizedFilter = filterValue.toLowerCase();\n\n    const filteredContacts = filterValue\n      ? contactList.filter(contact =>\n          contact.name.toLowerCase().includes(normalizedFilter)\n        )\n      : contactList;\n\n    return filteredContacts;\n  }\n);\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  padding: 12px;\n  width: 400px;\n  border: 1px solid #148f77;\n  border-radius: 8px;\n`;\nexport const FormLabel = styled.label`\n  margin-bottom: 12px;\n  font-weight: 500;\n  color: #0b5345;\n`;\nexport const InputField = styled.input`\n  width: 200px;\n  padding: 12px;\n  outline: 0;\n  margin-bottom: 24px;\n  border: 1px solid #148f77;\n  border-radius: 4px;\n  transition: border-color 250ms ease-out;\n  &:first-of-type {\n    margin-bottom: 16px;\n  }\n  &:hover {\n    border-color: #0b5345;\n  }\n\n  &:focus,\n  &:active {\n    border: none;\n    box-shadow: 2px 2px 8px #0b5345;\n  }\n\n  &:placeholder {\n    font-size: 8px;\n  }\n`;\n\nexport const SubmitBtn = styled.button`\n  width: 150px;\n  margin-bottom: 16px;\n  border-color: #0b5345;\n  background-color: #ffffff;\n  transition: border-color 250ms ease-out, background-color 250ms ease-out,\n    color 250ms ease-out;\n  &:hover,\n  &:focus {\n    background-color: #0b5345;\n    color: #ffffff;\n    border-color: transparent;\n  }\n`;\n","import React, { useState, useId } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { Form, FormLabel, InputField, SubmitBtn } from './ContactForm.styled';\nimport { addContact } from 'redux/contacts/operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const nameInputId = useId();\n  const telInputId = useId();\n\n  const changeInput = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'phone':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      name,\n      number,\n    };\n    const contactName = contact.name;\n    const isInclude = contacts.some(item => contactName === item.name);\n\n    Notify.init({\n      position: 'center-top',\n    });\n\n    isInclude\n      ? Notify.failure(`${contactName} is already in contacts.`)\n      : dispatch(addContact(contact));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel htmlFor={nameInputId}>Name</FormLabel>\n      <InputField\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        id={nameInputId}\n        onChange={changeInput}\n        placeholder=\"Jacob Mercer\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <FormLabel htmlFor={telInputId}>Number</FormLabel>\n      <InputField\n        type=\"tel\"\n        name=\"phone\"\n        value={number}\n        id={telInputId}\n        onChange={changeInput}\n        placeholder=\"555-55-55\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <SubmitBtn type=\"submit\">Add contact</SubmitBtn>\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterLabel = styled.label`\n  display: block;\n  margin-bottom: 24px;\n  font-weight: 500;\n  color: #34495e;\n`;\nexport const FilterInput = styled.input`\n  margin-left: 12px;\n  width: 200px;\n  padding: 8px;\n  outline: 0;\n  border: 1px solid #34495e;\n  border-radius: 4px;\n  transition: border-color 250ms ease-out;\n\n  &:hover {\n    border-color: #34495e;\n  }\n\n  &:focus,\n  &:active {\n    border: none;\n    box-shadow: 2px 2px 8px #34495e;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\n\nimport { FilterLabel, FilterInput } from './Filter.styled';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filterValue = useSelector(selectFilter);\n\n  const onChangeFilter = e => {\n    const { value } = e.currentTarget;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <FilterLabel>\n      Find contacts by name\n      <FilterInput\n        value={filterValue}\n        type=\"text\"\n        onChange={onChangeFilter}\n      ></FilterInput>\n    </FilterLabel>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  margin-bottom: 8px;\n`;\n\nexport const ContactInfo = styled.p`\n  display: inline-block;\n  margin-right: 12px;\n`;\n\nexport const DeleteBtn = styled.button`\n  background-color: #ffffff;\n  color: #34495e;\n  border-color: #34495e;\n  transition: background-color 250ms ease-out, color 250ms ease-out;\n  &:hover {\n    background-color: #34495e;\n    color: #ffffff;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { Item, ContactInfo, DeleteBtn } from './ContactItem.styled';\n\nexport const ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n  const onDeleteContact = () => dispatch(deleteContact(id));\n\n  return (\n    <Item>\n      <ContactInfo>\n        {name}: {number}\n      </ContactInfo>\n      <DeleteBtn onClick={onDeleteContact} type=\"button\">\n        Delete\n      </DeleteBtn>\n    </Item>\n  );\n};\n\nContactItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 24px;\n`;\n\nexport const NotFoundMessage = styled.p`\n  color: #ef4444;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectFilteredList } from 'redux/contacts/selectors';\nimport { ContactItem } from '../ContactItem';\nimport { List, NotFoundMessage } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const filteredContacts = useSelector(selectFilteredList);\n  const noContactsFind = filteredContacts.length === 0;\n\n  return (\n    <>\n      <List>\n        {noContactsFind ? (\n          <NotFoundMessage>We didn't find any contacts</NotFoundMessage>\n        ) : (\n          filteredContacts.map(contact => (\n            <ContactItem\n              key={contact.id}\n              id={contact.id}\n              name={contact.name}\n              number={contact.number}\n            />\n          ))\n        )}\n      </List>\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const LoaderContainer = styled.div`\n  margin: 0 auto;\n`;\n","import React from 'react';\nimport { ColorRing } from 'react-loader-spinner';\nimport { LoaderContainer } from './Loader.styled';\n\nexport const Loader = () => {\n  return (\n    <LoaderContainer>\n      <ColorRing\n        visible={true}\n        height=\"80\"\n        width=\"80\"\n        ariaLabel=\"blocks-loading\"\n        wrapperStyle={{}}\n        wrapperClass=\"blocks-wrapper\"\n        colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n      />\n    </LoaderContainer>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ErrorMessage = styled.p`\n  text-transform: uppercase;\n  color: #e36d65;\n`;\n","import { useSelector } from 'react-redux';\nimport { selectErrorMessage } from 'redux/contacts/selectors';\nimport { ErrorMessage } from './NotFound.styled';\n\nexport const NotFound = () => {\n  const error = useSelector(selectErrorMessage);\n\n  return <ErrorMessage>{error}</ErrorMessage>;\n};\n","import { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { Loader } from 'components/Loader';\nimport { NotFound } from 'components/NotFound';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectErrorMessage,\n  selectLoadingStatus,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport const Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoadingStatus);\n  const error = useSelector(selectErrorMessage);\n  const contacts = useSelector(selectContacts);\n\n  const isLoaded = contacts.length > 0;\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <NotFound />}\n      {!isLoading && isLoaded && (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n    </>\n  );\n};\n","import styled from 'styled-components';\n\nexport const Title = styled.h2``;\n","import PropTypes from 'prop-types';\nimport { Title } from './Container.styled';\n\nexport const Container = ({ title, children }) => {\n  return (\n    <>\n      <Title>{title}</Title>\n      <div>{children}</div>\n    </>\n  );\n};\n\nContainer.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node.isRequired,\n};\n","import { ContactForm } from 'components/ContactForm';\nimport { Contacts } from 'components/Contacts';\nimport { Container } from 'components/Container';\n\nconst ContactsPage = () => {\n  return (\n    <>\n      <Container title=\"Phonebook\">\n        <ContactForm />\n      </Container>\n      <Container title=\"Contacts\">\n        <Contacts />\n      </Container>\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectContacts","state","contacts","items","selectLoadingStatus","isLoading","selectErrorMessage","error","selectFilter","filter","value","selectFilteredList","createSelector","contactList","filterValue","normalizedFilter","toLowerCase","contact","name","includes","Form","styled","FormLabel","InputField","SubmitBtn","ContactForm","useState","setName","number","setNumber","dispatch","useDispatch","useSelector","nameInputId","useId","telInputId","changeInput","e","currentTarget","reset","onSubmit","preventDefault","contactName","isInclude","some","item","Notify","position","addContact","htmlFor","type","id","onChange","placeholder","pattern","title","required","FilterLabel","FilterInput","Filter","setFilter","Item","ContactInfo","DeleteBtn","ContactItem","onClick","deleteContact","List","NotFoundMessage","ContactList","filteredContacts","noContactsFind","length","map","LoaderContainer","Loader","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","ErrorMessage","NotFound","Contacts","isLoaded","useEffect","fetchContacts","Title","Container","children"],"sourceRoot":""}